services:
  rememo:
    build: ./backend
    ports:
      - "8080:80"
    environment:
      # Database Configuration
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_NAME=rememo
      - DB_USER=rememo_user
      - DB_PASSWORD=rememo_password
      
      # LLM Configuration
      - LLM_PROVIDER=${LLM_PROVIDER:-ollama}  # ollama or openai
      - OLLAMA_URL=http://ollama:11434
      - OPENAI_API_KEY=${OPENAI_API_KEY:-}
      - OPENAI_BASE_URL=${OPENAI_BASE_URL:-https://api.openai.com/v1}
      
      # AI Model Configuration
      - DEFAULT_MODEL=${DEFAULT_MODEL:-llama3.1}
      - EMBEDDING_MODEL=${EMBEDDING_MODEL:-sentence-transformers/all-MiniLM-L6-v2}
      - SYSTEM_PROMPT=${SYSTEM_PROMPT:-You are a helpful AI assistant for journaling and self-reflection.}
      - EMBEDDING_DIMENSION=${EMBEDDING_DIMENSION:-1536}

      # App Configuration
      - APP_HOST=0.0.0.0
      - APP_PORT=80
      - DEBUG=${DEBUG:-false}
      - SECRET_KEY=${SECRET_KEY:-your-secret-key-change-this}
      
      # Feature Flags
      - ENABLE_VOICE=${ENABLE_VOICE:-true}
      - MAX_ENTRY_LENGTH=${MAX_ENTRY_LENGTH:-10000}
      - MAX_FACTS_PER_ENTRY=${MAX_FACTS_PER_ENTRY:-20}
    depends_on:
      postgres:
        condition: service_healthy
    volumes:
      - ./logs:/app/logs
    networks:
      - rememo-network
    profiles:
      - default
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:80/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  postgres:
    image: pgvector/pgvector:pg16
    environment:
      POSTGRES_DB: rememo
      POSTGRES_USER: rememo_user
      POSTGRES_PASSWORD: rememo_password
      POSTGRES_INITDB_ARGS: "--encoding=UTF-8"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init-db.sql:/docker-entrypoint-initdb.d/init-db.sql
    networks:
      - rememo-network
    profiles:
      - default
      - db-selfhost
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U rememo_user -d rememo"]
      interval: 30s
      timeout: 10s
      retries: 5
    restart: unless-stopped

  ollama:
    image: ollama/ollama:latest
    environment:
      - OLLAMA_KEEP_ALIVE=24h
      - OLLAMA_HOST=0.0.0.0
    volumes:
      - ollama_data:/root/.ollama
    networks:
      - rememo-network
    profiles:
      - llm-selfhost
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: 1
              capabilities: [gpu]
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:11434/api/tags"]
      interval: 30s
      timeout: 10s
      retries: 3
    restart: unless-stopped
    # Optional: Pull specific models on startup
    # command: >
    #   sh -c "ollama serve & 
    #          sleep 10 && 
    #          ollama pull llama3.1 && 
    #          ollama pull nomic-embed-text && 
    #          wait"

volumes:
  postgres_data:
    driver: local
  ollama_data:
    driver: local

networks:
  rememo-network:
    driver: bridge

# Usage Examples:
# 
# Full self-hosted (with local LLM):
# docker-compose --profile llm-selfhost --profile db-selfhost up -d
#
# Self-hosted DB with external LLM (OpenAI):
# LLM_PROVIDER=openai OPENAI_API_KEY=your_key docker-compose --profile db-selfhost up -d
#
# External DB and LLM (for production):
# docker-compose up -d rememo
#
# Development with only the app:
# docker-compose up rememo