-- Database initialization script for re:memo
-- Enable pgvector extension for vector similarity search

-- Enable necessary extensions
CREATE EXTENSION IF NOT EXISTS "pgvector";
CREATE EXTENSION IF NOT EXISTS "uuid-ossp";

-- Create database user if not exists
DO
$do$
BEGIN
   IF NOT EXISTS (
      SELECT FROM pg_catalog.pg_roles
      WHERE  rolname = 'rememo_user') THEN

      CREATE ROLE rememo_user LOGIN PASSWORD 'rememo_password';
   END IF;
END
$do$;

-- Grant privileges
GRANT ALL PRIVILEGES ON DATABASE rememo TO rememo_user;
GRANT ALL ON SCHEMA public TO rememo_user;

-- Create tables (these will be created by SQLAlchemy, but including for reference)

-- Journal entries table
CREATE TABLE IF NOT EXISTS journal_entries (
    id SERIAL PRIMARY KEY,
    title VARCHAR(500) NOT NULL,
    content TEXT NOT NULL,
    status VARCHAR(20) DEFAULT 'draft',
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

-- User facts table with vector support
CREATE TABLE IF NOT EXISTS user_facts (
    id SERIAL PRIMARY KEY,
    content TEXT NOT NULL,
    topic VARCHAR(200) NOT NULL,
    fact_type VARCHAR(50) NOT NULL,
    timestamp TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    original_snippet TEXT,
    entry_id INTEGER REFERENCES journal_entries(id) ON DELETE CASCADE,
    embedding_vector vector(384)  -- Vector dimension should match EMBEDDING_DIMENSION in settings (384 for all-MiniLM-L6-v2, 1536 for OpenAI)
);

-- Embedding cache table
CREATE TABLE IF NOT EXISTS embedding_cache (
    id SERIAL PRIMARY KEY,
    text_hash VARCHAR(64) UNIQUE NOT NULL,
    text_preview VARCHAR(200) NOT NULL,
    embedding vector(384) NOT NULL,  -- Vector dimension should match EMBEDDING_DIMENSION in settings
    model_name VARCHAR(100) NOT NULL,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    accessed_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    access_count INTEGER DEFAULT 1
);

-- Create indexes for better performance
CREATE INDEX IF NOT EXISTS idx_journal_entries_status ON journal_entries(status);
CREATE INDEX IF NOT EXISTS idx_journal_entries_created_at ON journal_entries(created_at);
CREATE INDEX IF NOT EXISTS idx_user_facts_topic ON user_facts(topic);
CREATE INDEX IF NOT EXISTS idx_user_facts_entry_id ON user_facts(entry_id);
CREATE INDEX IF NOT EXISTS idx_user_facts_timestamp ON user_facts(timestamp);
CREATE INDEX IF NOT EXISTS idx_user_facts_fact_type ON user_facts(fact_type);
CREATE INDEX IF NOT EXISTS idx_embedding_cache_hash ON embedding_cache(text_hash);
CREATE INDEX IF NOT EXISTS idx_embedding_cache_model ON embedding_cache(model_name);

-- Create vector similarity index for pgvector
CREATE INDEX IF NOT EXISTS idx_user_facts_embedding_cosine 
ON user_facts USING ivfflat (embedding_vector vector_cosine_ops) 
WITH (lists = 100);

-- Insert sample data for testing
INSERT INTO journal_entries (title, content, status) VALUES 
('Welcome to re:memo', 'Today I started using re:memo for journaling. I''m excited to see how AI can help me understand my thoughts and experiences better. I hope this tool will help me track my personal growth and identify patterns in my life.', 'complete'),
('Morning Reflection', 'Had a productive morning working on the new project. Feeling motivated and focused. The weather is beautiful today, which always lifts my spirits. Planning to go for a walk later to clear my mind.', 'complete'),
('Weekend Planning', 'Thinking about weekend plans. Want to spend time with family and maybe try that new restaurant downtown. Also need to catch up on reading and maybe do some gardening if the weather is nice.', 'draft');

-- Insert sample facts (these would normally be generated by AI)
INSERT INTO user_facts (content, topic, fact_type, entry_id, original_snippet) VALUES 
('Started using re:memo for journaling', 'journaling', 'event', 1, 'started using re:memo for journaling'),
('Excited about AI-assisted self-reflection', 'personal growth', 'emotion', 1, 'excited to see how AI can help'),
('Had a productive morning working on project', 'work', 'event', 2, 'productive morning working on the new project'),
('Feeling motivated and focused', 'emotions', 'emotion', 2, 'Feeling motivated and focused'),
('Beautiful weather lifts spirits', 'mood', 'reflection', 2, 'weather is beautiful today, which always lifts my spirits'),
('Planning family time for weekend', 'relationships', 'goal', 3, 'spend time with family'),
('Want to try new restaurant', 'leisure', 'goal', 3, 'try that new restaurant downtown');

-- Grant permissions to user
GRANT SELECT, INSERT, UPDATE, DELETE ON ALL TABLES IN SCHEMA public TO rememo_user;
GRANT USAGE, SELECT ON ALL SEQUENCES IN SCHEMA public TO rememo_user;
